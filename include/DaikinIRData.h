#ifndef DAIKIN_IR_DATA_H
#define DAIKIN_IR_DATA_H

#include <Arduino.h>

namespace DaikinIR {

// 冷房20度のフレームデータ
namespace Cooling20 {
  const uint16_t frame1[] = {
    270, 586, 282, 586, 284, 558, 308, 534, 336, 586, 282
  };
  const uint16_t frame1_length = sizeof(frame1) / sizeof(frame1[0]);

  const uint16_t frame2[] = {
    1842, 308, 1442, 296, 588, 280, 588, 282, 584, 284,
    1430, 308, 564, 306, 564, 304, 590, 280, 556, 312,
    1460, 282, 590, 276, 1456, 284, 1428, 310, 560, 310,
    1428, 310, 1454, 284, 1456, 282, 1460, 280, 1432, 308,
    556, 310, 588, 282, 1460, 280, 582, 284, 588, 282,
    558, 308, 566, 304, 584, 284, 564, 306, 584, 284,
    558, 312, 558, 310, 564, 306, 580, 286, 1430, 312,
    558, 308, 592, 280, 556, 312, 586, 284, 560, 308,
    564, 308, 560, 308, 564, 306, 558, 308, 562, 310,
    530, 338, 558, 312, 556, 310, 558, 312, 554
  };
  const uint16_t frame2_length = sizeof(frame2) / sizeof(frame2[0]);

  const uint16_t frame3[] = {
    316, 530, 340, 526, 342, 552, 318, 550, 318, 554,
    316, 1394, 344, 524, 344, 1394, 346, 550, 316, 528,
    342, 526, 342, 526, 346, 526, 340, 526, 346, 522,
    344, 526, 344, 526, 342, 526, 344, 524, 344, 530,
    338, 524, 344, 524, 346, 522, 346, 524, 346, 522,
    344, 524, 346, 520, 348, 526, 344, 524, 344, 524,
    346, 522, 346, 526, 344, 524, 344, 524, 346, 522,
    346, 524, 346, 522, 344, 524, 346, 522, 346, 526,
    344, 522, 346, 1390, 348, 1372, 370, 520, 346, 524,
    346, 1390, 348, 1392, 346, 1350, 388, 496, 374
  };
  const uint16_t frame3_length = sizeof(frame3) / sizeof(frame3[0]);

  const uint16_t frame4[] = {
    530, 340, 554, 312, 558, 314, 552, 314, 556, 314,
    552, 314, 534, 336, 552, 316, 554, 316, 580, 288,
    554, 316, 550, 318, 554, 316, 1422, 316, 554, 316,
    552, 316, 1424, 314, 1428, 310, 1430, 312, 550, 318,
    554, 316, 1400, 338, 554, 314, 556, 314, 554, 314,
    1426, 312, 1400, 340, 578, 288, 532, 338, 554, 314,
    552, 318, 552, 316, 528, 342, 550, 318, 554, 316,
    552, 316, 528, 342, 552, 316, 526, 344, 550, 318,
    526, 344, 522, 344, 1400, 338, 528, 342, 1422, 316,
    554, 316, 554, 314, 554, 316, 526, 342, 530
  };
  const uint16_t frame4_length = sizeof(frame4) / sizeof(frame4[0]);

  const uint16_t frame5[] = {
    348, 522, 348, 494, 374, 496, 374, 516, 350, 520,
    350, 518, 350, 522, 350, 518, 350, 494, 376, 492,
    374, 476, 394, 1364, 374, 1386, 350, 496, 376, 518,
    350, 520, 350, 1342, 396, 494, 374
  };
  const uint16_t frame5_length = sizeof(frame5) / sizeof(frame5[0]);
}

// 自動+1度のフレームデータ
namespace AutoPlus1 {
  const uint16_t frame1[] = {
    494, 310, 554, 316, 554, 308, 560, 368, 502, 308, 560
  };
  const uint16_t frame1_length = sizeof(frame1) / sizeof(frame1[0]);

  const uint16_t frame2[] = {
    1596, 556, 1234, 504, 314, 552, 312, 558, 364, 552,
    1130, 560, 366, 506, 302, 562, 308, 562, 312, 556,
    1238, 504, 362, 504, 1174, 564, 1184, 554, 308, 564,
    1188, 548, 1234, 504, 1186, 552, 1178, 612, 1184, 502,
    306, 562, 366, 504, 1176, 562, 306, 562, 314, 558,
    304, 562, 368, 502, 312, 560, 310, 558, 310, 554,
    370, 502, 312, 556, 316, 556, 314, 552, 1238, 502,
    366, 502, 314, 556, 366, 502, 366, 504, 364, 504,
    312, 558, 314, 552, 312, 558, 366, 502, 316, 556,
    310, 554, 322, 550, 314, 554, 368, 500, 306
  };
  const uint16_t frame2_length = sizeof(frame2) / sizeof(frame2[0]);

  const uint16_t frame3[] = {
    316, 554, 320, 548, 316, 554, 316, 550, 318, 554,
    1182, 556, 370, 498, 1244, 498, 316, 552, 316, 552,
    320, 548, 316, 552, 314, 552, 316, 556, 322, 544,
    318, 550, 320, 548, 324, 546, 316, 550, 322, 548,
    314, 554, 318, 550, 314, 554, 352, 472, 360, 508,
    366, 550, 320, 502, 364, 506, 362, 506, 362, 508,
    364, 504, 364, 504, 364, 504, 364, 506, 362, 504,
    368, 504, 370, 498, 374, 498, 358, 506, 366, 508,
    368, 500, 368, 502, 1238, 500, 362, 506, 362, 508,
    1236, 502, 1236, 500, 1232, 506, 364, 506
  };
  const uint16_t frame3_length = sizeof(frame3) / sizeof(frame3[0]);

  const uint16_t frame4[] = {
    448, 420, 450, 418, 450, 426, 444, 424, 442, 422,
    448, 420, 448, 422, 450, 418, 450, 422, 448, 420,
    448, 452, 418, 426, 442, 1288, 450, 424, 448, 426,
    442, 1290, 452, 422, 446, 426, 444, 420, 446, 424,
    446, 420, 448, 1288, 450, 424, 448, 422, 446, 422,
    448, 448, 418, 1288, 452, 1288, 452, 424, 442, 424,
    446, 422, 446, 424, 448, 424, 444, 424, 446, 450,
    418, 1288, 450, 424, 446, 422, 446, 424, 446, 424,
    442, 424, 446, 1288, 450, 426, 444, 1290, 448, 426,
    442, 428, 442, 426, 442, 424, 446, 424, 444
  };
  const uint16_t frame4_length = sizeof(frame4) / sizeof(frame4[0]);

  const uint16_t frame5[] = {
    424, 446, 426, 444, 422, 446, 424, 446, 420, 446,
    424, 446, 418, 450, 426, 444, 420, 448, 1288, 450,
    1288, 450, 1290, 452, 420, 448, 422, 498, 1238, 506,
    364, 502, 366, 510
  };
  const uint16_t frame5_length = sizeof(frame5) / sizeof(frame5[0]);
}

// 除湿-1.5のフレームデータ
namespace DehumidMinus1_5 {
  const uint16_t frame1[] = {
    492, 366, 502, 318, 552, 366, 500, 312, 560, 366, 434
  };
  const uint16_t frame1_length = sizeof(frame1) / sizeof(frame1[0]);

  const uint16_t frame2[] = {
    1738, 432, 1248, 490, 434, 434, 436, 500, 366, 500,
    1184, 488, 382, 554, 368, 502, 368, 500, 368, 434,
    1258, 484, 430, 436, 1302, 500, 1182, 556, 320, 552,
    1236, 502, 1184, 552, 1236, 502, 1190, 552, 1236, 436,
    378, 552, 318, 488, 1302, 436, 432, 436, 390, 478,
    388, 544, 318, 462, 408, 482, 436, 500, 322, 480,
    436, 500, 316, 552, 312, 558, 366, 502, 1182, 556,
    368, 434, 436, 500, 314, 464, 408, 486, 374, 492,
    436, 500, 316, 486, 436, 434, 434, 434, 378, 494,
    432, 432, 436, 436, 374, 560, 370, 500, 318
  };
  const uint16_t frame2_length = sizeof(frame2) / sizeof(frame2[0]);

  const uint16_t frame3[] = {
    316, 554, 310, 556, 320, 550, 366, 500, 320, 552,
    314, 552, 1184, 556, 314, 556, 1188, 550, 318, 552,
    366, 502, 318, 552, 310, 556, 370, 500, 366, 502,
    370, 502, 312, 554, 316, 554, 310, 558, 316, 554,
    366, 502, 314, 556, 314, 554, 318, 552, 310, 558,
    368, 502, 308, 560, 314, 556, 312, 556, 320, 550,
    312, 554, 314, 558, 312, 556, 316, 554, 310, 558,
    318, 552, 314, 552, 368, 502, 308, 560, 318, 552,
    316, 552, 322, 548, 366, 502, 316, 554, 1184, 554,
    312, 558, 1188, 548, 1188, 550, 1182, 558, 322
  };
  const uint16_t frame3_length = sizeof(frame3) / sizeof(frame3[0]);

  const uint16_t frame4[] = {
    410, 1326, 412, 1272, 554, 1242, 500, 1238, 410, 456,
    410, 460, 410, 1328, 410, 458, 408, 460, 410, 458,
    410, 460, 410, 404, 462, 460, 410, 404, 464, 462,
    408, 458, 410, 460, 410, 458, 410, 462, 408, 458,
    410, 460, 410, 458, 408, 412, 460, 460, 406, 462,
    410, 1328, 410, 460, 410, 458, 410, 1328, 410, 462,
    408, 1330, 410, 4030, 318, 1338, 406, 1324, 408, 1328,
    410, 462, 412, 1270, 464, 1334, 404, 458, 410, 462,
    410, 458, 408, 404, 466, 460, 408, 462, 408, 486,
    382, 1332, 408, 458, 410, 462, 408, 458, 408
  };
  const uint16_t frame4_length = sizeof(frame4) / sizeof(frame4[0]);

  const uint16_t frame5[] = {
    408, 460, 410, 460, 408, 462, 408, 460, 408, 464,
    406, 458, 408, 410, 460, 400, 468, 464, 406, 402,
    466, 408, 462, 486, 382, 402, 466, 1280, 460, 458,
    410, 462, 408, 402, 466, 1330, 410, 1328, 410, 462, 408
  };
  const uint16_t frame5_length = sizeof(frame5) / sizeof(frame5[0]);
}

} // namespace DaikinIR

#endif // DAIKIN_IR_DATA_H
